---
name: Apigee CICD Using Maven
on: push
env:
  DEPLOYMENT_NAME: Apigee-test
  APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
  APIGEE_ENV: ${{ secrets.APIGEE_ENV }}
  API_VERSION: ${{ secrets.API_VERSION }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  WORKFLOW_IDENTITY_FEDERATION_NAME: ${{ secrets.WORKFLOW_IDENTITY_FEDERATION_NAME }}
  AUTHOR_EMAIL: veenakumari.kummari@easystepin.com
  APIGEE_DEPLOYMENT_SUFFIX: relase_dev
  APIGEE_BUILD_DEPLOYMENT_SUFFIX: apigee_relase_dev
jobs:
  node-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install Dependencies
        run: npm install --silent --no-fund
      - name: apigeelint
        run: ./node_modules/apigeelint/cli.js -s ./apiproxy -f html.js -e PO013,PO025 >
          ./apigeelint-out.html
  apigee-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - id: auth
        name: Authenticate to Google Apigee Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/127369686749/locations/global/workloadIdentityPools/pavan-apigee-git/providers/pavan-apigee-git
          service_account: workload-identity-federation@esi-apigee-x-394004.iam.gserviceaccount.com
      - run: echo '${{ steps.auth.outputs.access_token }}'
      - name: mvn package
        run: mvn process-resources -P$API_VERSION -Dcommit=$GIT_COMMIT
          -Dbranch=$GIT_BRANCH -Dauthor=$AUTHOR_EMAIL
          -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX
      - name: mvn config
        run: mvn apigee-enterprise:configure -q -P$API_VERSION -Dorg=$APIGEE_ORG
          -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX
      - name: mvn deploy proxy xhybrid
        if: env.API_VERSION == 'googleapi'
        run: mvn apigee-enterprise:deploy -q -P dev -Dbearer=${{steps.auth.outputs.access_token }}
